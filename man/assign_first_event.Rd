% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign-first-event.R
\name{assign_first_event}
\alias{assign_first_event}
\title{Assign the earliest event, when there are multiple events}
\usage{
assign_first_event(main_events, competing_events = NA,
  withdraw_events = NA, followup_time, main_label = "main event",
  competing_label = "competing event",
  withdraw_label = "withdraw from study", units = NA)
}
\arguments{
\item{main_events}{The main outcome or event. A list of  numbers 
(typically integers) that represent a unit of time (typically days).}

\item{competing_events}{The competing event (optional). A list of  numbers 
(typically integers) that represent a unit of time (typically days).}

\item{withdraw_events}{The withdraw event (optional). A list of  numbers 
(typically integers) that represent a unit of time (typically days).}

\item{followup_time}{The follow-up time period (optinal). A number (typically 
and integer). 'end of study' will be the assigned censor event if any event 
(main, competing or withdraw events) has the value equal the followup_time.}

\item{main_label}{(optional) Label for the main event (default = 
"main event").}

\item{competing_label}{(optional) Label for the competing risk event (default
= "competing event").}

\item{withdraw_label}{(optional) Label for the withdraw event (default =
"withdraw form study")}

\item{units}{(optional) Time unit (e.g. "days", default = NA)
#' @return data frame with two variables:
     a) 'censor_event' - factor with levels and labels of the different 
     potential first events:
             1 = "main event"
             2 = "competing event"
             3 = "withdraw from study"
             4 = "end of study"
     b) 'censor_time' - time to event. Number (usually an integer).
Returned data.frame length = length of original lists. 
Event date =  followup_tme (censored), if no event.}
}
\description{
Finds the earliest date and returns the event and date for that event. Use 
when there are multiple events and dates. Each row represents an observation.
 The output of this function creates a variable that is used for survival 
 models and predictive algorithms.

Input are lists of event dates for the main event (outcome), competing event
(optional) and withdraw event (optional). The maximum follow-up time must be 
specified (followup_time).

The lists should be the same length but, if not, the return list is the same 
length as the longest imput list.
}
\examples{
\dontrun{
#' # load the test data in the bllFlow package
  df <- as.data.frame(read.csv("inst/extdata/RESPECT-EOL_validation.csv"))

# or
#  df <- RESPECT-EOL_validation

# if you don't have the bllFlow package loded.
 source(file.path(getwd(), 'R/make-event-date.R'))

# create event ata
  death    <- make_event_date(df, df$risk, 1825, label = 'death', units = 'days')
  competing   <- make_event_date(df, 0.2, 1825, label = 'censor', units = 'days')
  withdraw <- make_event_date(df, 0.40, 1825, label = 'withdraw', units = 'days')

# now find with event occurred first and assign the follow-up time to that event.
  censor2 <- assign_first_event(death, competing_events = competing,
    withdraw_events = withdraw, followup_time = 1825, units = units(death))
}
}
\keyword{make_data}
\keyword{make_event_date}
